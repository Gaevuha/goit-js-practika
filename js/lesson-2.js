//!========================================================

// –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ styles –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ 'jazz' —ñ 'blues'
// –î–æ–¥–∞–π—Ç–µ –¥–æ –∫—ñ–Ω—Ü—è –º–∞—Å–∏–≤—É –µ–ª–µ–º–µ–Ω—Ç 'rock-n-roll' –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ–≥–æ –º–µ—Ç–æ–¥—É –º–∞—Å–∏–≤—ñ–≤
// –ó–Ω–∞–π–¥—ñ—Ç—å –µ–ª–µ–º–µ–Ω—Ç 'blues' —É –º–∞—Å–∏–≤—ñ —Ç–∞ –∑–∞–º—ñ–Ω—ñ—Ç—å –π–æ–≥–æ –Ω–∞ 'classic', –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ JavaScript-–∫–æ–¥

// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é logItems(array), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç
// —ñ –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –∫–æ–∂–µ–Ω –π–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç —É —Ñ–æ—Ä–º–∞—Ç—ñ:
// "<–Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞> - <–∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞>".
// –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ —Ü–∏–∫–ª for –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É.
// –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1 (–∞ –Ω–µ –∑ 0).

// const styles = ['jazz', 'blues'];

// styles.push('rock-n-roll');

// if (styles.includes('blues')) {
//    styles[1] = 'classic';
// }

// console.log(styles);

// function logItems(array) {

//     for (let i = 0; i < array.length; i++) {

//         console.log(`${i +1} - ${array[i]}`)
//     }

// }

// logItems(["apple", "peach", "pear", "banana"]);


//!========================================================

// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é checkLogin(array), —è–∫–∞:
// –ü—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ –ª–æ–≥—ñ–Ω—ñ–≤ —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç.
// –ó–∞–ø–∏—Ç—É—î —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —á–µ—Ä–µ–∑ prompt.
// –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ —î –≤–≤–µ–¥–µ–Ω–µ —ñ–º'—è —É –ø–µ—Ä–µ–¥–∞–Ω–æ–º—É –º–∞—Å–∏–≤—ñ.
// –Ø–∫—â–æ —ñ–º'—è —î –≤ –º–∞—Å–∏–≤—ñ ‚Äì –≤–∏–≤–æ–¥–∏—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ alert: "Welcome, <name>!"
// –Ø–∫—â–æ —ñ–º'—è –≤—ñ–¥—Å—É—Ç–Ω—î ‚Äì –≤–∏–≤–æ–¥–∏—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: "User not found".

// const logins = ["Peter", "John", "Igor", "Sasha"];


// function checkLogin(array) {

//     const userName = prompt('–í–≤–µ–¥—ñ—Ç—å —Å–≤—ñ–π –ª–æ–≥—ñ–Ω');

//     if (array.includes(userName)) {

//         alert(`Welcome, ${userName}!`);

//     } else {

//         alert("User not found");
//     }
        
// }

// const logins = ["Peter", "John", "Igor", "Sasha"];
// checkLogin(logins);

//!========================================================

// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é calculateAverage(),
// —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å
// –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ó—Ö–Ω—î —Å–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è.
// –î–æ–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É, —â–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ - —Ü–µ —á–∏—Å–ª–∞.
 
// function calculateAverage() {

//     if (arguments.length === 0) {
//         return '–í–≤–µ–¥—ñ—Ç—å —Ö–æ—á–∞–± –æ–¥–Ω–µ —á–∏—Å–ª–æ';
//     }

//     let sum = 0;

//     for (let i = 0; i < arguments.length; i++) {

//         if (typeof arguments[i] !== 'number' || isNaN(arguments[i])) {

//             return ' –í—Å—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –º–∞—é—Ç—å –±—É—Ç–∏ —á–∏—Å–ª–∞–º–∏';

//         }
//             sum += arguments[i];
//     }
      
//       return sum / arguments.length;   
//     }

// console.log(calculateAverage(5, 10, 15,));

//!========================================================

// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ —Å—É–º—É–≤–∞—Ç–∏–º–µ —Å—É—Å—ñ–¥–Ω—ñ —á–∏—Å–ª–∞ 
// —ñ –ø—É—à–∏—Ç–∏–º–µ —ó—Ö –≤ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤.

// const someArr = [22, 11, 34, 5, 12, 13, 14, 15];

// —É—Ç–æ—á–Ω–µ–Ω–Ω—è: —Å–∫–ª–∞–¥–∞—Ç–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–µ—Ä—à–µ —á–∏—Å–ª–æ –∑ –¥—Ä—É–≥–∏–º, –ø–æ—Ç—ñ–º –¥—Ä—É–≥–µ - –∑ —Ç—Ä–µ—Ç—ñ–º, 
// —Ç—Ä–µ—Ç—î - –∑ —á–µ—Ç–≤–µ—Ä—Ç–∏–º —ñ —Ç–∞–∫ –¥–æ –∫—ñ–Ω—Ü—è.
// –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ —Ñ—É–Ω–∫—Ü—ñ—è –º–∞—î –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –º–∞—Å–∏–≤ [33, 45, 39, 17, 25, 27, 29].

// function sumNumber(arr) {

//     const newArr = [];

//     for (let i = 0; i < arr.length - 1; i++){

//         newArr.push(arr[i] + arr[i + 1]);  // –î–æ–¥–∞—î–º–æ —Å—É–º—É —Å—É—Å—ñ–¥–Ω—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
//     }

//     return newArr;
// }
// const someArr = [22, 11, 34, 5, 12, 13, 14, 15];
// console.log(sumNumber(someArr));

// üîπ –ü–µ—Ä—à–∞ —ñ—Ç–µ—Ä–∞—Ü—ñ—è (i = 0):
// 22 + 11 = 33, –¥–æ–¥–∞—î–º–æ –≤ newArr.
// üîπ –î—Ä—É–≥–∞ —ñ—Ç–µ—Ä–∞—Ü—ñ—è (i = 1):
// 11 + 34 = 45, –¥–æ–¥–∞—î–º–æ –≤ newArr.
// üîπ –¢—Ä–µ—Ç—è —ñ—Ç–µ—Ä–∞—Ü—ñ—è (i = 2):
// 34 + 5 = 39, –¥–æ–¥–∞—î–º–æ –≤ newArr.
// üîπ –ß–µ—Ç–≤–µ—Ä—Ç–∞ —ñ—Ç–µ—Ä–∞—Ü—ñ—è (i = 3):
// 5 + 12 = 17, –¥–æ–¥–∞—î–º–æ –≤ newArr.
// üîπ –ü'—è—Ç–∞ —ñ—Ç–µ—Ä–∞—Ü—ñ—è (i = 4):
// 12 + 13 = 25, –¥–æ–¥–∞—î–º–æ –≤ newArr.
// üîπ –®–æ—Å—Ç–∞ —ñ—Ç–µ—Ä–∞—Ü—ñ—è (i = 5):
// 13 + 14 = 27, –¥–æ–¥–∞—î–º–æ –≤ newArr.
// üîπ –°—å–æ–º–∞ —ñ—Ç–µ—Ä–∞—Ü—ñ—è (i = 6):
// 14 + 15 = 29, –¥–æ–¥–∞—î–º–æ –≤ newArr.

//!========================================================
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é findSmallestNumber(numbers),
// —è–∫–∞ —à—É–∫–∞—î –Ω–∞–π–º–µ–Ω—à–µ —á–∏—Å–ª–æ –≤ –º–∞—Å–∏–≤—ñ.
// –î–æ–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É, —â–æ —Ñ—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º—É—î —Å–∞–º–µ –º–∞—Å–∏–≤, —ñ 
// —è–∫—â–æ —Ñ—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º—É—î –º–∞—Å–∏–≤ - –ø–æ–≤–µ—Ä–Ω—ñ—Ç—å –∑ —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–∞–π–º–µ–Ω—à–µ —á–∏—Å–ª–æ,
// –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É - –ø–æ–≤–µ—Ä–Ω—ñ—Ç—å 'Sory, it is not an array!'.

// const numbers = [2, 5, 35, 56, 12, 24, 7, 80, 3];

// function findSmallestNumber(numbers) {

//     if (!Array.isArray(numbers)) {  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —â–æ –µ–ª–µ–º–µ–Ω—Ç–∏ –¥—ñ–π—Å–Ω–æ —î –º–∞—Å–∏–≤–æ–º

//         return 'Sorry, it is not an array!'; 
//     }

//     if (numbers.length === 0) {    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤
//         return 'Array is empty!';
//     }

//     let minNumber = numbers[0];

//     for (let i = 1; i < numbers.length; i++) {

//         if (numbers[i] < minNumber) {
//             minNumber = numbers[i];
//         }
//     }

//     return minNumber;
// }

// const numbers = [2, 5, 35, 56, 12, 24, 7, 80, 3];
// console.log(findSmallestNumber(numbers)); // 2
// console.log(findSmallestNumber("hello")); // 'Sorry, it is not an array!'
// console.log(findSmallestNumber([])); // 'Array is empty!'

//!========================================================

// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é findLongestWord(string), —è–∫–∞ 
// –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω–∏–π —Ä—è–¥–æ–∫, —â–æ —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è –ª–∏—à–µ –∑—ñ —Å–ª—ñ–≤, —Ä–æ–∑–¥—ñ–ª–µ–Ω–∏—Ö
// –ø—Ä–æ–±—ñ–ª–∞–º–∏ (–ø–∞—Ä–∞–º–µ—Ç—Ä string), —ñ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏–º–µ –Ω–∞–π–¥–æ–≤—à–µ —Å–ª–æ–≤–æ —É —Ä–µ—á–µ–Ω–Ω—ñ.

// –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—å —Ü–∏–º –ø—Ä–∏–∫–ª–∞–¥–æ–º –≤–∏–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —ó—ó —Ä–æ–±–æ—Ç–∏:
// console.log(findLongestWord("London is the capital of Great Britain")); // 'capital'

// function findLongestWord(string) {

//     const words = string.split(' '); // –†–æ–∑–±–∏–≤–∞—î–º–æ —Ä—è–¥–æ–∫ —É –º–∞—Å–∏–≤ —Å–ª—ñ–≤

//     let longWord = '';  // –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –Ω–∞–π–¥–æ–≤—à–æ–≥–æ —Å–ª–æ–≤–∞

//     for (let i = 0; i < words.length; i++) {

//         if (words[i].length > longWord.length) {

//             longWord = words[i]; // –Ø–∫—â–æ —Å–ª–æ–≤–æ –¥–æ–≤—à–µ –∑–∞ –ø–æ—Ç–æ—á–Ω–µ –Ω–∞–π–¥–æ–≤—à–µ, –æ–Ω–æ–≤–ª—é—î–º–æ
//         }
//     }
//     return longWord;
// }
// console.log(findLongestWord("London is the capital of Great Britain")); // 'capital'

//!========================================================

// –ù–∞–ø–∏—à—ñ—Ç—å —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –¥–ª—è –æ–±'—î–∫—Ç—É user, –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ:
// 1 - –¥–æ–¥–∞—Å—Ç—å –ø–æ–ª–µ mood –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º 'happy',
// 2 - –∑–∞–º—ñ–Ω–∏—Ç—å hobby –Ω–∞ 'skydiving',
// 3 - –∑–∞–º—ñ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è premium –Ω–∞ false,
// 4 - –≤–∏–≤–µ–¥–µ –∑–º—ñ—Å—Ç –æ–±'—î–∫—Ç–∞ user —É —Ñ–æ—Ä–º–∞—Ç—ñ
// '<–∫–ª—é—á>:<–∑–Ω–∞—á–µ–Ω–Ω—è>' –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—è Object.keys() —Ç–∞ for...of

// const user = {
//     name: "John",
//     age: 20,
//     hobby: "tenis",
//     premium: true
// };

 // 1. –î–æ–¥–∞—î–º–æ –ø–æ–ª–µ mood
// user.mood = 'happy';

 // 2. –ó–∞–º—ñ–Ω—é—î–º–æ hobby
// user.hobby = 'skydiving';

 // 3. –ó–∞–º—ñ–Ω—é—î–º–æ premium –Ω–∞ false
// user.premium = false;

/// 4. –í–∏–≤–æ–¥–∏–º–æ –∫–ª—é—á—ñ —Ç–∞ –∑–Ω–∞—á–µ–Ω–Ω—è
// for (const key of Object.keys(user)) {
//     console.log(`${key}: ${user[key]}`);
// }

//!========================================================
// –Ñ –æ–±'—î–∫—Ç, –≤ —è–∫–æ–º—É –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –∑–∞—Ä–ø–ª–∞—Ç–∏ –∫–æ–º–∞–Ω–¥–∏
// –ù–∞–ø–∏—à—ñ—Ç—å –∫–æ–¥ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —É—Å—ñ—Ö –∑–∞—Ä–ø–ª–∞—Ç —Ç–∞
// –∑–±–µ—Ä–µ–∂—ñ—Ç—å –π–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∑–º—ñ–Ω–Ω—ñ–π sum.
// –Ø–∫—â–æ –æ–±'—î–∫—Ç salaries –ø—É—Å—Ç–∏–π, —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—î –±—É—Ç–∏ 0

// const salaries = {
//     Mango: 100,
//     Poly: 160,
//     Ajax: 1470,
// };
  
// function getSumSalaries(salaries) {

//     let totalSalaries = 0;

//     const values = Object.values(salaries);

//     for (let i = 0; i < values.length; i++) {
        
//         totalSalaries += values[i];
        
//     }
//     return totalSalaries;
// }

// console.log(getSumSalaries(salaries));



//!========================================================

// –°—Ç–≤–æ—Ä—ñ—Ç—å –æ–±'—î–∫—Ç calculator –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –º–µ—Ç–æ–¥–∞–º–∏:
// read(a, b) - –ø—Ä–∏–π–º–∞—î –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —ñ –∑–±–µ—Ä—ñ–≥–∞—î —ó—Ö —è–∫ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –æ–±'—î–∫—Ç–∞,
// sum() - –ø–æ–≤–µ—Ä—Ç–∞—î —Å—É–º–º—É –∑–±–µ—Ä–µ–∂–µ–Ω–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å (–∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –≤ –æ–±'—î–∫—Ç—ñ),
// mult() - –ø–µ—Ä–µ–º–Ω–æ–∂–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –≤ –æ–±'—î–∫—Ç—ñ),
// –≤–∏–Ω–µ—Å—ñ—Ç—å –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –≤ –æ–±'—î–∫—Ç—ñ –≤ –æ–∫—Ä–µ–º–∏–π –º–µ—Ç–æ–¥ exist().

// –Ø–∫—â–æ –≤–∫–∞–∑–∞–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –≤ –æ–± º—î–∫—Ç—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ (—Ç–æ–±—Ç–æ –º–µ—Ç–æ–¥ exist –ø–æ–≤–µ—Ä—Ç–∞—î false),
// –º–µ—Ç–æ–¥–∏ sum —ñ mult –º–∞—é—Ç—å –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Ä—è–¥–æ–∫ 'No such propeties'

// const calculator = {
//     // –ó–±–µ—Ä—ñ–≥–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è
//     read(a, b) {
//         this.a = a;
//         this.b = b;
//     },

//     // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π
//     exist() {
//         return this.hasOwnProperty('a') && this.hasOwnProperty('b');
//     },

//     // –ü–æ–≤–µ—Ä—Ç–∞—î —Å—É–º—É, —è–∫—â–æ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —ñ—Å–Ω—É—é—Ç—å
//     sum() {
//         if (this.exist()) {
//             return this.a + this.b;
//         }
//         return 'No such properties';
//     },

//     // –ü–æ–≤–µ—Ä—Ç–∞—î –¥–æ–±—É—Ç–æ–∫, —è–∫—â–æ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —ñ—Å–Ω—É—é—Ç—å
//     mult() {
//         if (this.exist()) {
//             return this.a * this.b;
//         }
//         return 'No such properties';
//     }
// };

// // –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
// calculator.read(10, 5);
// console.log(calculator.sum());  // 15
// console.log(calculator.mult()); // 50

// calculator.read(10);  // –ó–∞–¥–∞—î–º–æ –ª–∏—à–µ –æ–¥–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
// console.log(calculator.sum());  // 'No such properties'
// console.log(calculator.mult()); // 'No such properties'

//!========================================================

// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é calcTotalPrice(fruits, fruitName),
// —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ (fruits) —ñ —Ä—è–¥–æ–∫ –∑ –Ω–∞–∑–≤–æ—é —Ñ—Ä—É–∫—Ç–∞ (fruitName).
// –§—É–Ω–∫—Ü—ñ—è —Ä–∞—Ö—É—î —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ñ—Ä—É–∫—Ç–∞
// –∑ —Ç–∞–∫–∏–º —ñ–º'—è–º, —Ü—ñ–Ω–æ—é —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –∑ –æ–±'—î–∫—Ç–∞.

// –ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É, —â–æ –≤ –º–∞—Å–∏–≤—ñ –º–æ–∂–µ –±—É—Ç–∏ –∫—ñ–ª—å–∫–∞ –æ–± º—î–∫—Ç—ñ–≤ –∑ –æ–¥–Ω–∞–∫–æ–≤–æ—é 
// –Ω–∞–∑–≤–æ—é —Ñ—Ä—É–∫—Ç–∞, —Ü–µ —Ç–∞–∫–æ–∂ —Ç—Ä–µ–±–∞ —É—Ä–∞—Ö—É–≤–∞—Ç–∏.

// const fruits = [
//     { name: "–Ø–±–ª—É–∫–æ", price: 45, quantity: 7 },
//     { name: "–ê–ø–µ–ª—å—Å–∏–Ω", price: 60, quantity: 4 },
//     { name: "–ë–∞–Ω–∞–Ω", price: 125, quantity: 8 },
//     { name: "–ì—Ä—É—à–∞", price: 350, quantity: 2 },
//     { name: "–í–∏–Ω–æ–≥—Ä–∞–¥", price: 440, quantity: 3 },
//     { name: "–ë–∞–Ω–∞–Ω", price: 125, quantity: 3 },
// ];
  
// function calcTotalPrice(fruits, fruitName) {

//     let totalPrice = 0;

//     for (const fruit of fruits) {

//         if (fruit.name === fruitName) {

//             totalPrice += fruit.price * fruit.quantity;                
//         }        
//     }
//    return totalPrice;
// }
// console.log(calcTotalPrice(fruits, '–ë–∞–Ω–∞–Ω'));

//!========================================================

